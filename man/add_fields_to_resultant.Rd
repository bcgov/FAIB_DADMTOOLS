% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add-fields-to-resultant.R
\name{add_fields_to_resultant}
\alias{add_fields_to_resultant}
\title{Build or update a flat, denormalized table, also known as a resultant table, with fields from previously imported datasets.}
\usage{
add_fields_to_resultant(
  new_resultant_name,
  gr_skey_table,
  included_fields,
  attribute_table = NULL,
  overwrite_fields = FALSE,
  current_resultant_table = "resultant",
  pg_conn_param = dadmtools::get_pg_conn_list(),
  key_resultant_tbl = "gr_skey",
  key_grskey_tbl = "gr_skey",
  key_join_tbl = "pgid",
  update_field_names = NULL,
  include_prefix = FALSE,
  prefix = NULL,
  overwrite_resultant_table = FALSE
)
}
\arguments{
\item{new_resultant_name}{(required): The user-defined name for the output resultant table, including the schema. E.g. sandbox.tsa_resultant}

\item{gr_skey_table}{(required): The name of the table containing the key (e.g., gr_skey) used to join with the resultant key. E.g. sandbox.adm_nr_districts_sp_gr_skey}

\item{included_fields}{(required): A vector of fields to include from joining tables (e.g. district_name, org_unit)}

\item{attribute_table}{(optional): The name of the attribute table containing the key (e.g., pgid) used to join with `gr_skey_table`. Attributes from this table will be included in the final resultant table. If `attribute_table` is not provided, the attributes specified in `included_fields` will be selected from `gr_skey_table` for the final resultant table.}

\item{overwrite_fields}{(required): A logical value (TRUE or FALSE) indicating whether to overwrite existing fields with new field names specified in `update_field_names`. Default : FALSE. TRUE = New Fields will overwrite any fields that already exists in the current Resultant table. FALSE = Existing Resultant table fields will not be overwritten.}

\item{current_resultant_table}{(required): Name of the existing resultant table (e.g. sandbox.all_bc_gr_skey)}

\item{pg_conn_param}{(required): named list of postgres connection parameters (e.g. get_pg_conn_list())}

\item{key_resultant_tbl}{(required): Default: 'gr_skey'. The join key in resultant table (e.g. gr_skey)}

\item{key_grskey_tbl}{(required): Default:'gr_skey'. The join key in 'gr_skey_table' (e.g. gr_skey)}

\item{key_join_tbl}{(optional): Default:'pgid'. The join key in 'attribute_table' (e.g. pgid). Only used if `attribute_table` is provided.}

\item{update_field_names}{(optional):  A vector of new field names to use in the final resultant table, replacing those specified in 'included_fields'. The number of field names in this vector must match the number in 'included_fields'. (e.g. admin_district_name, admin_org_unit)}

\item{include_prefix}{(required): A logical value (TRUE or FALSE) indicating whether to add prefix to resultant field names. If TRUE, `prefix` is required.}

\item{prefix}{(optional): A prefix to prepend to field names in the resultant table. By default, it updates 'included_fields', but if 'update_field_names' is provided, the prefix will be applied to those instead.}

\item{overwrite_resultant_table}{(required): A logical value (TRUE or FALSE) indicating whether to overwrite the 'new_resultant_name'}
}
\value{
nothing is returned
}
\description{
Build or update a flat, denormalized table, also known as a resultant table, with fields from previously imported datasets.
}
\examples{
coming soon
}
